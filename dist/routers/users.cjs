"use strict";var u=Object.defineProperty;var i=Object.getOwnPropertyDescriptor;var l=Object.getOwnPropertyNames;var m=Object.prototype.hasOwnProperty;var h=(e,t)=>{for(var s in t)u(e,s,{get:t[s],enumerable:!0})},f=(e,t,s,a)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of l(t))!m.call(e,r)&&r!==s&&u(e,r,{get:()=>t[r],enumerable:!(a=i(t,r))||a.enumerable});return e};var p=e=>f(u({},"__esModule",{value:!0}),e);var g={};h(g,{router:()=>n});module.exports=p(g);var o=require("express");var d={_data:[{id:0,firstName:"Hendrik",lastName:"van Dam",emailAddress:"hvd@server.nl"},{id:1,firstName:"Marieke",lastName:"Jansen",emailAddress:"m@server.nl"}],_index:2,getAll(e){setTimeout(()=>{e({err:null,data:this._data})},1500)},getById(e,t){setTimeout(()=>{e<0||e>=this._data.length?t({err:{message:`User with id '${e}' could not be found`},data:null}):t({err:null,data:this._data[e]})},1500)},add(e,t){setTimeout(()=>{let s=this._data.some(a=>a.emailAddress===e.emailAddress);if(console.log({emailExists:s}),s)t({err:{message:`User with email '${e.emailAddress}' already exists`},data:null});else{let a={id:this._index++,...e};this._data.push(a),t({err:null,data:a})}},1500)},update(e,t,s){setTimeout(()=>{if(e<0||e>=this._data.length||typeof e!="number")s({err:{message:"Invalid id provided. Id must be a number and must be within the range of the current users."},data:null});else{let a=this._data[e];if(!a)return s({err:{message:`User with id '${e}' could not be found`},data:null});console.log({user:a});let r={...a,...t};this._data[e]=r,s({err:null,data:r})}},1500)},delete(e,t){setTimeout(()=>{if(e<0||e>=this._data.length)t({err:{message:"Invalid id provided. Id must be a number and must be within the range of the current users."},data:null});else{let s=this._data[e];if(!s)return t({err:{message:`User with id '${e}' could not be found`},data:null});this._data=this._data.filter(a=>a.id!==e),this._index=this._data.length,t({err:null,data:s})}},1500)}};var n=(0,o.Router)();n.get("/",async(e,t)=>{d.getAll(({data:s,err:a})=>{a?t.json({status:500,error:a}):t.json({status:200,result:s})})});n.post("/register",(e,t)=>{d.add(e.body,({data:s,err:a})=>{a?t.json({status:500,error:a}):t.json({status:200,result:s})})});n.get("/:userId",async(e,t)=>{d.getById(Number.parseInt(e.params.userId),({data:s,err:a})=>{s?t.json({status:200,result:{...s}}):t.json({status:404,error:a})})});n.put("/:userId",async(e,t)=>{d.update(Number.parseInt(e.params.userId),e.body,({data:s,err:a})=>{s?t.json({status:200,result:s}):t.json({status:404,error:a})})});n.delete("/:userId",async(e,t)=>{d.delete(Number.parseInt(e.params.userId),({data:s,err:a})=>{s?t.json({status:200,result:s}):t.json({status:404,error:a})})});0&&(module.exports={router});
