import{Router as u}from"express";var r={_data:[{id:0,firstName:"Hendrik",lastName:"van Dam",emailAddress:"hvd@server.nl"},{id:1,firstName:"Marieke",lastName:"Jansen",emailAddress:"m@server.nl"}],_index:2,getAll(e){setTimeout(()=>{e({err:null,data:this._data})},1500)},getById(e,t){setTimeout(()=>{e<0||e>=this._data.length?t({err:{message:`User with id '${e}' could not be found`},data:null}):t({err:null,data:this._data[e]})},1500)},add(e,t){setTimeout(()=>{let s=this._data.some(a=>a.emailAddress===e.emailAddress);if(console.log({emailExists:s}),s)t({err:{message:`User with email '${e.emailAddress}' already exists`},data:null});else{let a={id:this._index++,...e};this._data.push(a),t({err:null,data:a})}},1500)},update(e,t,s){setTimeout(()=>{if(e<0||e>=this._data.length||typeof e!="number")s({err:{message:"Invalid id provided. Id must be a number and must be within the range of the current users."},data:null});else{let a=this._data[e];if(!a)return s({err:{message:`User with id '${e}' could not be found`},data:null});console.log({user:a});let n={...a,...t};this._data[e]=n,s({err:null,data:n})}},1500)},delete(e,t){setTimeout(()=>{if(e<0||e>=this._data.length)t({err:{message:"Invalid id provided. Id must be a number and must be within the range of the current users."},data:null});else{let s=this._data[e];if(!s)return t({err:{message:`User with id '${e}' could not be found`},data:null});this._data=this._data.filter(a=>a.id!==e),this._index=this._data.length,t({err:null,data:s})}},1500)}};var d=u();d.get("/",async(e,t)=>{r.getAll(({data:s,err:a})=>{a?t.json({status:500,error:a}):t.json({status:200,result:s})})});d.post("/register",(e,t)=>{r.add(e.body,({data:s,err:a})=>{a?t.json({status:500,error:a}):t.json({status:200,result:s})})});d.get("/:userId",async(e,t)=>{r.getById(Number.parseInt(e.params.userId),({data:s,err:a})=>{s?t.json({status:200,result:{...s}}):t.json({status:404,error:a})})});d.put("/:userId",async(e,t)=>{r.update(Number.parseInt(e.params.userId),e.body,({data:s,err:a})=>{s?t.json({status:200,result:s}):t.json({status:404,error:a})})});d.delete("/:userId",async(e,t)=>{r.delete(Number.parseInt(e.params.userId),({data:s,err:a})=>{s?t.json({status:200,result:s}):t.json({status:404,error:a})})});export{d as router};
